/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("s_bcd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("s_bcd[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_bcd[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_bcd[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_bcd[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_bcd[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_bcd[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_bcd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_bcd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_bcd";
}

SIGNAL("s_decimal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("s_decimal[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_decimal";
}

SIGNAL("s_decimal[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_decimal";
}

SIGNAL("s_decimal[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_decimal";
}

SIGNAL("s_decimal[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_decimal";
}

SIGNAL("s_decimal[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_decimal";
}

SIGNAL("s_decimal[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_decimal";
}

SIGNAL("s_decimal[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s_decimal";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_bcd[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("s_decimal[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 324.508;
			LEVEL 1 FOR 364.992;
			LEVEL 0 FOR 310.5;
		}
	}
}

TRANSITION_LIST("s_decimal[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 164.342;
			LEVEL 1 FOR 159.976;
			LEVEL 0 FOR 160.024;
			LEVEL 1 FOR 44.976;
			LEVEL 0 FOR 160.024;
			LEVEL 1 FOR 159.976;
			LEVEL 0 FOR 150.682;
		}
	}
}

TRANSITION_LIST("s_decimal[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 84.165;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 44.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 70.824;
		}
	}
}

TRANSITION_LIST("s_decimal[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 44.181;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 44.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 40.016;
			LEVEL 0 FOR 30.803;
		}
	}
}

TRANSITION_LIST("s_decimal[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 24.42;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 4.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 20.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 10.581;
		}
	}
}

TRANSITION_LIST("s_decimal[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 14.456;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 4.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 9.989;
			LEVEL 1 FOR 10.011;
			LEVEL 0 FOR 0.533;
		}
	}
}

TRANSITION_LIST("s_decimal[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.182;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 5.012;
			LEVEL 0 FOR 4.988;
			LEVEL 1 FOR 0.818;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_bcd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "s_decimal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
